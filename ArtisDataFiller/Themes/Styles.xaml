<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions">
	
	<Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Width" Value="75"/>
		<Setter Property="Height" Value="75"/>
		<Setter Property="Background" Value="#FF3293C3"/>
		<Setter Property="Template" >
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid x:Name="grid" Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" TargetName="grid" Value="#FF1475A5"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="grid" Value="#FF50B1E1"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="HeaderTextBlockStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontSize" Value="24"/>
	</Style>

	<Style x:Key="SimpleTextStyle" TargetType="{x:Type TextBlock}">
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="FontFamily" Value="Segoe UI Light"/>
		<Setter Property="FontSize" Value="14"/>
	</Style>

	<ControlTemplate x:Key="SimpleButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="grid" Background="#FF3293C3" TextBlock.FontFamily="Segoe UI Light" TextBlock.Foreground="White">
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" TargetName="grid" Value="#FF797D80"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" TargetName="grid" Value="#FF1475A5"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True"/>
					<Condition Property="IsPressed" Value="False"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background" TargetName="grid" Value="#FF50B1E1"/>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="BadSimpleButtonTemplate" TargetType="{x:Type Button}">
		<Grid x:Name="grid" Background="LightCoral" TextBlock.FontFamily="Segoe UI Light" TextBlock.Foreground="White">
			<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10" />
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Background" TargetName="grid" Value="#FF797D80"/>
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" TargetName="grid" Value="#FFD26262"/>
			</Trigger>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsMouseOver" Value="True"/>
					<Condition Property="IsPressed" Value="False"/>
				</MultiTrigger.Conditions>
				<Setter Property="Background" TargetName="grid" Value="#FFFF8F8F"/>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ItemsPanelTemplate x:Key="ImageListBoxItemsPanelTemplate">
		<WrapPanel>
			<i:Interaction.Behaviors>
				<ei:FluidMoveBehavior AppliesTo="Children"/>
			</i:Interaction.Behaviors>
		</WrapPanel>
	</ItemsPanelTemplate>

	<DataTemplate x:Key="ImageListBoxItemTemplate">
		<Image Source="{Binding Image}"
			Width="140"
			Height="140"
			Stretch="Fill"/>
	</DataTemplate>

	<Style x:Key="ImageListBoxItemContainerStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="2,0,0,0"/>												
		<Setter Property="Width" Value="150"/>					
		<Setter Property="Height" Value="150"/>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="LightSkyBlue"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="Selector.IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="WindowTemplateKey" TargetType="{x:Type Window}">
		<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
			<Grid>
				<AdornerDecorator>
					<ContentPresenter/>
				</AdornerDecorator>
				<ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false" Visibility="Collapsed" VerticalAlignment="Bottom"/>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
					<Condition Property="WindowState" Value="Normal"/>
				</MultiTrigger.Conditions>
				<Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
			</MultiTrigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="DialogWindowStyle" TargetType="{x:Type Window}">
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
		<Setter Property="Background" Value="#FF001B23"/>		
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Window}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}">
						<AdornerDecorator>
							<Grid >
								<Grid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</Grid.RowDefinitions>
								<ContentPresenter/>	

								<StackPanel Grid.Row="1" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,10,10" >
									<Button x:Name="OkButton" IsDefault="True" Content="OK" Template="{DynamicResource SimpleButtonTemplate}" Width="100" Command="{Binding OkCommand}">
										<i:Interaction.Triggers>
											<i:EventTrigger EventName="Click">
												<ei:ChangePropertyAction TargetObject="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}}" PropertyName="DialogResult" Value="true"/>
											</i:EventTrigger>
										</i:Interaction.Triggers>
									</Button>
									<Button x:Name="CancelButton" IsCancel="True" Content="Отмена" Template="{DynamicResource BadSimpleButtonTemplate}" Width="100" Margin="10,0,0,0">
									</Button>
								</StackPanel>
							</Grid>
						</AdornerDecorator>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="MinWidth" Value="400"/>
		<Setter Property="MinHeight" Value="250"/>
		<Setter Property="Title" Value="{Binding Title}"/>
		<Style.Triggers>
			<Trigger Property="ResizeMode" Value="CanResizeWithGrip">
				<Setter Property="Template" Value="{StaticResource WindowTemplateKey}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>